{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "azure-etl-data-factory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureBlobCSV",
								"type": "DatasetReference"
							},
							"name": "Employee"
						},
						{
							"dataset": {
								"referenceName": "AzureBlobCSV",
								"type": "DatasetReference"
							},
							"name": "Department"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureBlobCSV",
								"type": "DatasetReference"
							},
							"name": "EmpDept"
						}
					],
					"transformations": [
						{
							"name": "lookupDept"
						},
						{
							"name": "DropCol1"
						},
						{
							"name": "DropCol2"
						},
						{
							"name": "RemoveColumns1",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EMPLOYEE_ID as short,",
						"          FIRST_NAME as string,",
						"          LAST_NAME as string,",
						"          EMAIL as string,",
						"          PHONE_NUMBER as string,",
						"          HIRE_DATE as date,",
						"          JOB_ID as string,",
						"          SALARY as short,",
						"          COMMISSION_PCT as string,",
						"          MANAGER_ID1 as short,",
						"          DEPARTMENT_ID as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Employee",
						"source(output(",
						"          DEPARTMENT_ID as short,",
						"          DEPARTMENT_NAME as string,",
						"          MANAGER_ID2 as short,",
						"          LOCATION_ID as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Department",
						"DropCol1, DropCol2 lookup(DropCol1@DEPARTMENT_ID == DropCol2@DEPARTMENT_ID,",
						"     multiple: true,",
						"     broadcast: 'auto')~> lookupDept",
						"Employee select(mapColumn(",
						"          EMPLOYEE_ID,",
						"          FIRST_NAME,",
						"          LAST_NAME,",
						"          EMAIL,",
						"          PHONE_NUMBER,",
						"          DEPARTMENT_ID",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DropCol1",
						"Department select(mapColumn(",
						"          DEPARTMENT_ID,",
						"          DEPARTMENT_NAME",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DropCol2",
						"lookupDept select(mapColumn(",
						"          EMPLOYEE_ID,",
						"          FIRST_NAME,",
						"          LAST_NAME,",
						"          EMAIL,",
						"          PHONE_NUMBER,",
						"          DEPARTMENT_ID = DropCol1@DEPARTMENT_ID,",
						"          DEPARTMENT_NAME",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RemoveColumns1",
						"RemoveColumns1 derive(FULLNAME = concat(FIRST_NAME,' ',LAST_NAME)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['EmpDept_Lkp.csv'],",
						"     partitionBy('hash', 1)) ~> EmpDept"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_alterrow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureBlobCSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Department as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 alterRow(deleteIf(Department=='Payroll'),",
						"     updateIf(Department=='HR')) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:true,",
						"     insertable:true,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:['EmpID'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          EmpID = ID,",
						"          EmpName = Name,",
						"          Gender,",
						"          Salary,",
						"          Department",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_cached_sink')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "AzureBlobCSV",
								"type": "DatasetReference"
							},
							"name": "source2"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable",
								"type": "DatasetReference"
							},
							"name": "source3"
						}
					],
					"sinks": [
						{
							"name": "MaxEmpID"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"name": "CountryName"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          maxempid as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'select ISNULL(max(empid),0) maxempid from ENTDWDB.[dbo].[tbl_employee]\\n',",
						"     format: 'query') ~> source1",
						"source(output(",
						"          empname as string,",
						"          gender as string,",
						"          country as string,",
						"          salary as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source2",
						"source(output(",
						"          country_code as string,",
						"          country_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source3",
						"source2 keyGenerate(output(empid as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 derive(empid = MaxEmpID#outputs()[1].maxempid + empid,",
						"          country = CountryName#lookup(country).country_name) ~> derivedColumn1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          maxempid",
						"     )) ~> MaxEmpID",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink2",
						"source3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     keys:['country_code'],",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          country_code,",
						"          country_name",
						"     )) ~> CountryName"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_flatten')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureBlobJSON",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureBlobCSV",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "flatten1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     df_target_file as string",
						"}",
						"source(output(",
						"          people as (Address as (country as string, state as string, zipcode as integer), Contact as (Phone as integer, email as string), Name as string, Skills as string[], id as short)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'singleDocument') ~> source1",
						"source1 foldDown(unroll(people.Skills),",
						"     mapColumn(",
						"          ID = people.id,",
						"          Name = people.Name,",
						"          Skills = people.Skills",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"flatten1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:[($df_target_file)],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_parse_transform')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureBlobCSV",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "parse1"
						},
						{
							"name": "parse2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as integer,",
						"          empname as string,",
						"          skills as string,",
						"          address as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 parse(ParsedSkills = skills ? (skill1 as string,",
						"          skill2 as string,",
						"          skill3 as string),",
						"     format: 'delimited',",
						"     columnNamesAsHeader: false,",
						"     columnDelimiter: '|',",
						"     nullValue: '') ~> parse1",
						"parse1 parse(ParsedAddress = address ? (city as string,",
						"          Country as string),",
						"     format: 'json',",
						"     documentForm: 'singleDocument') ~> parse2",
						"parse2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Employee_Parsed.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          empid,",
						"          empname,",
						"          skill1 = ParsedSkills.skill1,",
						"          skill2 = ParsedSkills.skill2,",
						"          skill3 = ParsedSkills.skill3,",
						"          City = ParsedAddress.city,",
						"          Country = ParsedAddress.Country",
						"     ),",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_pivot')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureBlobCSV",
								"type": "DatasetReference"
							},
							"name": "employee"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureBlobCSV",
								"type": "DatasetReference"
							},
							"name": "AggSink"
						},
						{
							"dataset": {
								"referenceName": "AzureBlobCSV",
								"type": "DatasetReference"
							},
							"name": "PivotSink"
						}
					],
					"transformations": [
						{
							"name": "aggregate"
						},
						{
							"name": "pivot"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EMPLOYEE_ID as short,",
						"          EMPLOYEENAME as string,",
						"          GENDER as string,",
						"          COUNTRY as string,",
						"          DEPARTMENT as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> employee",
						"employee aggregate(groupBy(DEPARTMENT,",
						"          GENDER),",
						"     COUNT = count(EMPLOYEE_ID)) ~> aggregate",
						"employee pivot(groupBy(DEPARTMENT),",
						"     pivotBy(GENDER),",
						"     {} = count(EMPLOYEE_ID),",
						"     columnNaming: '$N$V',",
						"     lateral: true) ~> pivot",
						"aggregate sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['EmpDept_Agg.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> AggSink",
						"pivot sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['EmpDept_Pivot.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> PivotSink"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_rank')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureBlobCSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureBlobCSV",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "rank1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as short,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as short,",
						"          Department as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 rank(desc(Salary, true),",
						"     output(Rank as long),",
						"     dense: true) ~> rank1",
						"rank1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['EmployeeRanked.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_unpivot')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureBlobCSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureBlobCSV",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "unpivot1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          DEPARTMENT as short,",
						"          FeMale as short,",
						"          Male as short,",
						"          TransGender as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 unpivot(output(",
						"          Gender as string,",
						"          Count as short",
						"     ),",
						"     ungroupBy(DEPARTMENT),",
						"     lateral: true,",
						"     ignoreNullPivots: false) ~> unpivot1",
						"unpivot1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['EmpDept_UnPivot.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_window')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureBlobCSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureBlobCSV",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "window1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as short,",
						"          Name as string,",
						"          Gender as string,",
						"          Country as string,",
						"          Salary as short,",
						"          Department as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 window(over(Department),",
						"     asc(Salary, true),",
						"     AVG = avg(Salary),",
						"          DENSE_RANK = denseRank(),",
						"          LEAD = lead(Salary, 1, 0),",
						"          LAG = lag(Salary, 1, 0),",
						"          NTILE = nTile(4)) ~> window1",
						"window1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Employee_Window.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/powerquery_sample')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "Employee2",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Employee2",
							"dataset": {
								"referenceName": "Employee2",
								"type": "DatasetReference"
							}
						},
						{
							"name": "Department2",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Department2",
							"dataset": {
								"referenceName": "Department2",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared Employee2 = let AdfDoc = AzureStorage.BlobContents(\"https://azurestorageacct.blob.core.windows.net/azurecontainer/Input/Employee2.csv\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]) in  PromotedHeaders;\r\nshared Department2 = let AdfDoc = AzureStorage.BlobContents(\"https://azurestorageacct.blob.core.windows.net/azurecontainer/Input/Department2.csv\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]) in  PromotedHeaders;\r\nshared UserQuery = let Source = #\"Employee2\",\r\n  #\"Grouped rows\" = Table.Group(Source, {\"DepartmentID\"}, {{\"Count\", each Table.RowCount(_), Int64.Type}}),\r\n  #\"Merged queries\" = Table.NestedJoin(#\"Grouped rows\", {\"DepartmentID\"}, Department2, {\"DepartmentID\"}, \"Department2\", JoinKind.Inner),\r\n  #\"Expanded Department2\" = Table.ExpandTableColumn(#\"Merged queries\", \"Department2\", {\"DepartmentID\", \"DepartmentName\"}, {\"Department2.DepartmentID\", \"Department2.DepartmentName\"}),\r\n  #\"Removed columns\" = Table.RemoveColumns(#\"Expanded Department2\", {\"Department2.DepartmentID\"}),\r\n  #\"Renamed columns\" = Table.RenameColumns(#\"Removed columns\", {{\"Department2.DepartmentName\", \"DepartmentName\"}}),\r\n  #\"Reordered columns\" = Table.ReorderColumns(#\"Renamed columns\", {\"DepartmentID\", \"DepartmentName\", \"Count\"}) in #\"Reordered columns\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_alterrow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow3",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_alterrow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Input",
										"ds_v_Blob_File": "Employee1.csv"
									},
									"sink1": {
										"ds_v_DBName": "ENTDWDB",
										"ds_v_TableName": "tbl_employees"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DataFlows"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-29T02:45:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_alterrow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_cached_sink')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow_cashed_sink",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_cached_sink",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"ds_v_DBName": "ENTDWDB",
										"ds_v_TableName": "tbl_employee"
									},
									"source2": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Input",
										"ds_v_Blob_File": "employees.csv"
									},
									"source3": {
										"ds_v_DBName": "entdwdb",
										"ds_v_TableName": "tbl_country"
									},
									"MaxEmpID": {},
									"sink2": {
										"ds_v_DBName": "ENTDWDB",
										"ds_v_TableName": "tbl_employee"
									},
									"CountryName": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DataFlows"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_cached_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_df1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Employee": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Input",
										"ds_v_Blob_File": "Employee.csv"
									},
									"Department": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Input",
										"ds_v_Blob_File": "Department.csv "
									},
									"SinkAgg": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Output",
										"ds_v_Blob_File": "EmpDept_Agg.csv"
									},
									"SinkSort": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Output",
										"ds_v_Blob_File": "EmpDept_Sorted.csv"
									},
									"SinkUnion": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Output",
										"ds_v_Blob_File": "EmpDept_Union.csv"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DataFlows"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-20T01:23:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_df2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Employee": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Input",
										"ds_v_Blob_File": "Employee.csv"
									},
									"Department": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Input",
										"ds_v_Blob_File": "Department.csv"
									},
									"EmpDept": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Output",
										"ds_v_Blob_File": "EmpDept_Lkp.csv"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DataFlows"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-20T01:25:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_flatten')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow_flatten",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_flatten",
								"type": "DataFlowReference",
								"parameters": {
									"df_target_file": {
										"value": "'@{pipeline().parameters.pl_v_Output_Blob_File}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {
										"ds_v_Blob_Container": {
											"value": "@pipeline().parameters.pl_v_Blob_Container",
											"type": "Expression"
										},
										"ds_v_Blob_Directory": {
											"value": "@pipeline().parameters.pl_v_Input_Blob_Directory",
											"type": "Expression"
										},
										"ds_v_Blob_File": {
											"value": "@pipeline().parameters.pl_v_Input_Blob_File",
											"type": "Expression"
										}
									},
									"sink1": {
										"ds_v_Blob_Container": "@pipeline().parameters.pl_v_Blob_Container",
										"ds_v_Blob_Directory": {
											"value": "@pipeline().parameters.pl_v_Output_Blob_Directory",
											"type": "Expression"
										},
										"ds_v_Blob_File": {
											"value": "'ssss'",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pl_v_Blob_Container": {
						"type": "string",
						"defaultValue": "azurecontainer"
					},
					"pl_v_Input_Blob_Directory": {
						"type": "string",
						"defaultValue": "Input"
					},
					"pl_v_Input_Blob_File": {
						"type": "string",
						"defaultValue": "Employees.json"
					},
					"pl_v_Output_Blob_Directory": {
						"type": "string",
						"defaultValue": "Output"
					},
					"pl_v_Output_Blob_File": {
						"type": "string",
						"defaultValue": "FlattenSkills.csv"
					}
				},
				"folder": {
					"name": "DataFlows"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-29T02:45:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_flatten')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_parse_transform')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow_parse_transform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_parse_transform",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"ds_v_DBName": "entdwdb",
										"ds_v_TableName": "tbl_employee"
									},
									"sink1": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Output",
										"ds_v_Blob_File": "parse.csv"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-07T15:41:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_parse_transform')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_pivot')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Pivot",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_pivot",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"employee": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Input",
										"ds_v_Blob_File": "Employee1.csv"
									},
									"AggSink": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Output",
										"ds_v_Blob_File": "EmpDept_Agg.csv"
									},
									"PivotSink": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Output",
										"ds_v_Blob_File": "EmpDept_Pivot.csv"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DataFlows"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-21T02:22:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_pivot')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_powerqry')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "powerquery",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "powerquery_sample",
								"type": "DataFlowReference",
								"datasetParameters": {
									"Employee2": {},
									"Department2": {},
									"UserQueryCSVBlobDataSet": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Output",
										"ds_v_Blob_File": "powerqry.csv"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"queries": [
								{
									"queryName": "UserQuery",
									"dataflowSinks": [
										{
											"name": "UserQueryCSVBlobDataSet",
											"dataset": {
												"referenceName": "AzureBlobCSV",
												"type": "DatasetReference",
												"parameters": {
													"ds_v_Blob_Container": "azurecontainer",
													"ds_v_Blob_Directory": "Output",
													"ds_v_Blob_File": "powerqry.csv"
												}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['powerqry.csv'],\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> UserQueryCSVBlobDataSet"
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-29T15:04:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/powerquery_sample')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_rank')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow_rank_transform",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_rank",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Input",
										"ds_v_Blob_File": "Employees1.csv"
									},
									"sink1": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Output",
										"ds_v_Blob_File": "sss"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DataFlows"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_rank')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_unpivot')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Unpivot",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_unpivot",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Output",
										"ds_v_Blob_File": "EmpDept_Pivot.csv"
									},
									"sink1": {
										"ds_v_Blob_Container": "azurecontainer",
										"ds_v_Blob_Directory": "Output",
										"ds_v_Blob_File": "EmpDept_UnPivot.csv"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DataFlows"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-21T02:22:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_unpivot')]"
			]
		}
	]
}